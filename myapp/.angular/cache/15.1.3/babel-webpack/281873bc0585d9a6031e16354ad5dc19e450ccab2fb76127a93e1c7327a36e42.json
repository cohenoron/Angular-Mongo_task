{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport axios from 'axios';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ngx-cookie-service\";\nexport class StateService {\n  constructor(http, cookieService) {\n    this.http = http;\n    this.cookieService = cookieService;\n    this.actions = new BehaviorSubject([]);\n    this.currentActions = this.actions.asObservable();\n    this.nameOfUser = new BehaviorSubject('Guest');\n    this.currentNameOfUser = this.nameOfUser.asObservable();\n  }\n  changeCheckBox(value) {\n    this.checkBox.next(value);\n  }\n  changeVacations(value) {\n    this.vacations.next(value);\n  }\n  changeActions(value) {\n    this.actions.next(value);\n  }\n  changeModeUser(value) {\n    this.modeUser.next(value);\n  }\n  changeModeAdmin(value) {\n    this.modeAdmin.next(value);\n  }\n  changeShowLoginModal(value) {\n    this.showLoginModal.next(value);\n  }\n  changeIsLogin(value) {\n    this.isLogin.next(value);\n  }\n  changeShowNewVacationModal(value) {\n    this.showNewVacationModal.next(value);\n  }\n  changeShowVacationUpdate(value) {\n    this.showVacationUpdate.next(value);\n  }\n  changeShowVacationDelete(value) {\n    this.showVacationDelete.next(value);\n  }\n  changeShowRegisterModal(value) {\n    this.showRegisterModal.next(value);\n  }\n  changeNameOfUser(value) {\n    this.nameOfUser.next(value);\n  }\n  checkLogin() {\n    const jwt = this.cookieService.get('token');\n    if (jwt) {\n      this.changeIsLogin(true);\n      this.changeShowLoginModal(false);\n      axios.get('http://localhost:8080/profile', {\n        withCredentials: true,\n        headers: {\n          authorization: `Bearer ${jwt}`\n        }\n      }).then(response => {\n        const {\n          userName,\n          admin\n        } = response.data;\n        if (admin) {\n          this.changeModeAdmin(true);\n          this.changeModeUser(false);\n          this.changeNameOfUser(userName);\n        }\n        if (!admin) {\n          this.checkFav();\n          this.changeModeUser(true);\n          this.changeModeAdmin(false);\n          this.changeNameOfUser(userName);\n        }\n      }).catch(function (error) {\n        console.log(error.message);\n        alert(error.message);\n      });\n    }\n  }\n  checkFav() {\n    let checkBoxIds = [];\n    const jwt = this.cookieService.get('token');\n    axios.get('http://localhost:8080/fav', {\n      withCredentials: true,\n      headers: {\n        authorization: `Bearer ${jwt}`\n      }\n    }).then(response => {\n      const data = response.data;\n      if (data.length && Array.isArray(data)) {\n        checkBoxIds = data.map(item => item.vacation_id);\n      }\n      this.changeCheckBox(checkBoxIds);\n    }).catch(function (error) {\n      alert(error);\n    });\n  }\n  getVacation() {}\n  getActions() {\n    this.http.get('http://localhost:8080/actions').subscribe(data => {\n      this.changeActions(data);\n    });\n  }\n}\nStateService.ɵfac = function StateService_Factory(t) {\n  return new (t || StateService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.CookieService));\n};\nStateService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: StateService,\n  factory: StateService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["BehaviorSubject","axios","StateService","constructor","http","cookieService","actions","asObservable","nameOfUser","changeCheckBox","value","checkBox","next","changeVacations","vacations","changeActions","changeModeUser","modeUser","changeModeAdmin","modeAdmin","changeShowLoginModal","showLoginModal","changeIsLogin","isLogin","changeShowNewVacationModal","showNewVacationModal","changeShowVacationUpdate","showVacationUpdate","changeShowVacationDelete","showVacationDelete","changeShowRegisterModal","showRegisterModal","changeNameOfUser","checkLogin","jwt","get","withCredentials","headers","authorization","then","response","userName","admin","data","checkFav","catch","error","console","log","message","alert","checkBoxIds","length","Array","isArray","map","item","vacation_id","getVacation","getActions","subscribe","factory","providedIn"],"sourceRoot":"","sources":["D:\\workSpace\\Angular-Mongo_task\\myapp\\src\\app\\service\\shared.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport axios from 'axios';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StateService {\n\n\n  actions = new BehaviorSubject<any>([]);\n  currentActions = this.actions.asObservable();\n\n  nameOfUser = new BehaviorSubject<string>('Guest');\n  currentNameOfUser = this.nameOfUser.asObservable();\n  response: any;\n  data: any;\n\n  constructor(private http: HttpClient, private cookieService: CookieService) {}\n\n  changeCheckBox(value: any[]) {\n    this.checkBox.next(value);\n  }\n\n  changeVacations(value: any) {\n    this.vacations.next(value);\n  }\n\n  changeActions(value: any) {\n    this.actions.next(value);\n  }\n\n  changeModeUser(value: boolean) {\n    this.modeUser.next(value);\n  }\n\n  changeModeAdmin(value: boolean) {\n    this.modeAdmin.next(value);\n  }\n\n  changeShowLoginModal(value: boolean) {\n    this.showLoginModal.next(value);\n  }\n\n  changeIsLogin(value: boolean) {\n    this.isLogin.next(value);\n  }\n\n  changeShowNewVacationModal(value: boolean) {\n    this.showNewVacationModal.next(value);\n  }\n\n  changeShowVacationUpdate(value: boolean) {\n    this.showVacationUpdate.next(value);\n  }\n\n  changeShowVacationDelete(value: boolean) {\n    this.showVacationDelete.next(value);\n  }\n\n  changeShowRegisterModal(value: any) {\n    this.showRegisterModal.next(value);\n  }\n\n  changeNameOfUser(value: string) {\n    this.nameOfUser.next(value);\n  }\n\n  checkLogin() {\n    const jwt = this.cookieService.get('token');\n    if (jwt) {\n      this.changeIsLogin(true);\n      this.changeShowLoginModal(false);\n\n      axios\n        .get('http://localhost:8080/profile', {\n          withCredentials: true,\n          headers: { authorization: `Bearer ${jwt}` },\n        })\n        .then((response) => {\n          const { userName, admin } = response.data;\n          if (admin) {\n            this.changeModeAdmin(true);\n            this.changeModeUser(false);\n            this.changeNameOfUser(userName);\n          }\n          if (!admin) {\n            this.checkFav();\n            this.changeModeUser(true);\n            this.changeModeAdmin(false);\n            this.changeNameOfUser(userName);\n          }\n        })\n        .catch(function (error) {\n          console.log(error.message);\n          alert(error.message);\n        });\n    }\n  }\n\n  checkFav() {\n    let checkBoxIds: any[] = [];\n\n    const jwt = this.cookieService.get('token');\n    axios\n      .get('http://localhost:8080/fav', {\n        withCredentials: true,\n        headers: { authorization: `Bearer ${jwt}` },\n      })\n      .then((response) => {\n        const data = response.data;\n        if (data.length && Array.isArray(data)) {\n          checkBoxIds = data.map(\n            (item: { vacation_id: any }) => item.vacation_id\n          );\n        }\n        this.changeCheckBox(checkBoxIds);\n      })\n      .catch(function (error) {\n        alert(error);\n      });\n  }\n  getVacation(){}\n\n\n\n\n\n\n\n\n  \n  getActions() {\n    this.http.get('http://localhost:8080/actions').subscribe((data) => {\n      this.changeActions(data);\n     \n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}